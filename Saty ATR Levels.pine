// Saty ATR Levels
// Copyright (C) 2022 Saty Mahajan
// Author is not responsible for your trading using this script.
// Data provided in this script is not financial advice.
//
// Special thanks to Gabriel Viana.
// Based on my own ideas and ideas from Ripster, drippy2hard, 
// Adam Sliver, and others.
//
// Features:
// - Day, Swing, Position trading modes
// - Range against ATR for each period
// - Put and call trigger levels
// - Mid-range level
// - Full-range levels
// - Optional Extension Level

//@version=4
study("Saty ATR Levels", shorttitle = "Saty ATR Levels", overlay = true)

// Options
day_trading = "Day"
swing_trading = "Swing"
position_trading = "Position"
trading_type = input(day_trading, "Trading Type", options=[day_trading, swing_trading, position_trading])
use_options_labels = input(true, "Use Options Labels")
atr_length = input(14, "ATR Length")
trigger_percentage = input(0.236, "Trigger Percentage", type=input.float)
use_current_close = input(false, "Use Current Close")
close_cloud_on = input(true, "Close Cloud")
close_cloud_color = input(color.white, "Close Cloud Color")
lower_trigger_cloud_on = input(true, "Lower Trigger Cloud")
lower_trigger_cloud_color = input(color.yellow, "Lower Trigger Cloud Color")
lower_middle_cloud_on = input(true, "Lower Middle Cloud")
lower_middle_cloud_color = input(color.gray, "Lower Middle Cloud Color")
lower_atr_cloud_on = input(true, "Lower ATR Cloud")
lower_atr_cloud_color = input(color.white, "Lower ATR Cloud Color")
lower_extension_cloud_on = input(false, "Lower Extension Cloud")
lower_extension_cloud_color = input(color.gray, "Lower Extension Cloud Color")
upper_trigger_cloud_on = input(true, "Upper Trigger Cloud")
upper_trigger_cloud_color = input(color.aqua, "Upper Trigger Cloud Color")
upper_middle_cloud_on = input(true, "Upper Middle Cloud")
upper_middle_cloud_color = input(color.gray, "Upper Middle Cloud Color")
upper_atr_cloud_on = input(true, "Upper ATR Cloud")
upper_atr_cloud_color = input(color.white, "Upper ATR Cloud Color")
upper_extension_cloud_on = input(false, "Upper Extension Cloud")
upper_extension_cloud_color = input(color.gray, "Upper Extension Cloud Color")
cloud_size = input(2, "Cloud Size")

// Set the appropriate timeframe based on trading mode
timeframe_func() => 
    timeframe = "D"
    if trading_type == day_trading
        timeframe := "D"
    else if trading_type == swing_trading
        timeframe := "M"
    else if trading_type == position_trading
        timeframe := "3M"
    else
        timeframe := "D"

// Data
period_index = use_current_close ? 0 : 1
ticker = tickerid(syminfo.prefix, syminfo.ticker, session=session.regular)
previous_close = security(ticker,timeframe_func(),close[period_index],gaps = barmerge.gaps_off, lookahead = barmerge.lookahead_on)
atr = security(ticker,timeframe_func(),atr(atr_length)[period_index],gaps = barmerge.gaps_off, lookahead = barmerge.lookahead_on)
period_high = security(ticker, timeframe_func(),high,gaps = barmerge.gaps_off, lookahead = barmerge.lookahead_on)
period_low =security(ticker, timeframe_func(),low,gaps = barmerge.gaps_off, lookahead = barmerge.lookahead_on)
range = period_high - period_low
tr_percent_of_atr = (range / atr) * 100
lower_trigger = previous_close - (trigger_percentage * atr)
upper_trigger = previous_close + (trigger_percentage * atr)
lower_atr = previous_close - atr
upper_atr = previous_close + atr
lower_middle = previous_close - (atr * 0.618)
upper_middle = previous_close + (atr * 0.618)
lower_extension = (lower_atr) - (atr * 0.618)
upper_extension = (upper_atr) + (atr * 0.618)

// Add Labels
tr_vs_atr_color = color.green
if tr_percent_of_atr <= 70 
    tr_vs_atr_color := color.green 
else if tr_percent_of_atr >= 90 
    tr_vs_atr_color := color.red 
else
    tr_vs_atr_color := color.orange
    
trading_mode = "Day"
if trading_type == day_trading
    trading_mode := "Day"
else if trading_type == swing_trading
    trading_mode := "Swing"
else if trading_type == position_trading
    trading_mode := "Position"
else
    trading_mode := ""

long_label = ""
short_label = ""
if use_options_labels
    long_label := "Calls"
    short_label := "Puts"
else 
    long_label := "Long"
    short_label := "Short"

var tbl = table.new(position.top_right, 1, 4)
if (barstate.islast)
    table.cell(tbl, 0, 0, "Saty ATR Levels Info", bgcolor = color.black, text_color = color.white)
    table.cell(tbl, 0 ,1, trading_mode + " Range ($" + tostring(range, '#.##') + ") is " + tostring(tr_percent_of_atr, '#.#') + "% of ATR ($"+ tostring(atr, '#.##') + ")", bgcolor = tr_vs_atr_color)
    table.cell(tbl, 0, 2, long_label + " > $" + tostring(upper_trigger, '#.##') + " | +1 ATR $" + tostring(upper_atr, '#.##'), bgcolor = upper_trigger_cloud_color)
    table.cell(tbl, 0, 3, short_label + " < $"+ tostring(lower_trigger, '#.##') + " | -1 ATR: $" + tostring(lower_atr, '#.##'),  bgcolor = lower_trigger_cloud_color)

// Add Clouds
plot(lower_extension_cloud_on ? lower_extension : na, color = color.new(lower_extension_cloud_color, 50), linewidth = cloud_size)
plot(lower_atr_cloud_on ? lower_atr : na, color = color.new(lower_atr_cloud_color, 50), linewidth = cloud_size)
plot(lower_middle_cloud_on ? lower_middle : na, color = color.new(lower_middle_cloud_color, 50), linewidth = cloud_size)
plot(lower_trigger_cloud_on ? lower_trigger : na, color = color.new(lower_trigger_cloud_color, 50), linewidth = cloud_size)
plot(close_cloud_on ? previous_close : na, color= color.new(close_cloud_color, 50), linewidth = cloud_size)
plot(upper_trigger_cloud_on ? upper_trigger : na, color = color.new(upper_trigger_cloud_color, 50), linewidth = cloud_size)
plot(upper_middle_cloud_on ? upper_middle : na, color = color.new(upper_middle_cloud_color, 50), linewidth = cloud_size)
plot(upper_atr_cloud_on ? upper_atr : na, color = color.new(upper_atr_cloud_color, 50), linewidth = cloud_size)
plot(upper_extension_cloud_on ? upper_extension : na, color = color.new(upper_extension_cloud_color, 50), linewidth = cloud_size)
